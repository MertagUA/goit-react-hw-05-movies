{"version":3,"file":"static/js/249.a4a08289.chunk.js","mappings":"oRAEaA,EAAaC,EAAAA,EAAAA,GAAH,+CAIVC,EAAUD,EAAAA,EAAAA,EAAH,gD,SCJPE,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpC,OACE,2BACE,UAACL,EAAD,sBAAqBI,MACrB,SAACF,EAAD,UAAUG,MAGf,ECPYC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OAAuB,IAAnBA,EAAQC,QACH,wDAIP,wBACGD,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIN,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OAAO,SAACF,EAAD,CAAsBC,OAAQA,EAAQC,QAASA,GAA7BK,EAC1B,KAGN,ECQD,EAjBgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOJ,EAAP,KAAgBK,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEIC,EAAAA,EAAAA,IAAkBJ,GAFtB,OAEXK,EAFW,OAGjBN,EAAWM,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACH,KACG,SAACP,EAAD,CAAaC,QAASA,GAC9B,C,mMClBDc,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,qCAGJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBJ,EAAAA,EAAAA,GAAM,uBAAD,OAAwBC,IAD/C,cACCI,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBT,EAAAA,EAAAA,GAAM,iBAAD,OAAkBC,EAAlB,kBAAkCQ,IADzD,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCrB,GAArC,wFACkBW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,YAAiBY,IADxC,cACCI,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BtB,GAA9B,wFACkBW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,oBAAyBY,IADhD,cACCI,EADD,yBAEEA,EAASC,KAAKM,MAFhB,kEAKA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCP,GAAjC,wFACkBW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,oBAAyBY,IADhD,cACCI,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE","sources":["components/Reviews/ReviewsItem/ReviewsItem.styled.jsx","components/Reviews/ReviewsItem/ReviewsItem.jsx","components/Reviews/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AuthorName = styled.h2`\n  margin-bottom: 5px;\n`;\n\nexport const Comment = styled.p`\n  margin-bottom: 10px;\n`;\n","import { AuthorName, Comment } from './ReviewsItem.styled';\n\nexport const ReviewsItem = ({ author, content }) => {\n  return (\n    <li>\n      <AuthorName>Author: {author}</AuthorName>\n      <Comment>{content}</Comment>\n    </li>\n  );\n};\n","import { ReviewsItem } from '../ReviewsItem/ReviewsItem';\n\nexport const ReviewsList = ({ reviews }) => {\n  if (reviews.length === 0) {\n    return <h2>No reviews for this movie.</h2>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => {\n        return <ReviewsItem key={id} author={author} content={content} />;\n      })}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/API';\nimport { ReviewsList } from './ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const result = await fetchMovieReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    movieReviews();\n  }, [movieId]);\n  return <ReviewsList reviews={reviews} />;\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = new URLSearchParams({\n  api_key: '193a1318aa83a5b49d1c16448163261b',\n});\n\nexport async function fetchMovies() {\n  const response = await axios(`/trending/movie/day?${params}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(search) {\n  const response = await axios(`/search/movie?${params}&query=${search}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieDescription(id) {\n  const response = await axios(`/movie/${id}?${params}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits?${params}`);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews?${params}`);\n  return response.data.results;\n}"],"names":["AuthorName","styled","Comment","ReviewsItem","author","content","ReviewsList","reviews","length","map","id","useState","setReviews","movieId","useParams","useEffect","movieReviews","fetchMovieReviews","result","console","log","axios","params","URLSearchParams","api_key","fetchMovies","response","data","results","fetchSearchMovies","search","fetchMovieDescription","fetchMovieCast","cast"],"sourceRoot":""}