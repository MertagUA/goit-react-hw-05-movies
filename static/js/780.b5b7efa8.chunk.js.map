{"version":3,"file":"static/js/780.b5b7efa8.chunk.js","mappings":"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","sources":["components/FailedRoute/FailedRoute.jsx","components/MoviesList/MoviesItem/MoviesItem.styled.jsx","components/MoviesList/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MoviesForm/MoviesForm.styled.jsx","components/MoviesForm/MoviesForm.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["const Failed = () => {\n  return <h2>Page not found!</h2>;\n};\n\nexport default Failed;\n","import styled from '@emotion/styled';\nimport { theme } from 'theme/theme';\n\nexport const MoviesItemStyled = styled.li`\n  width: 300px;\n  text-align: center;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  box-shadow: ${theme.boxShadow};\n  transition: scale 200ms linear;\n  &:hover {\n    scale: 1.05;\n  }\n`;\n\nexport const MoviesItemTitle = styled.p`\n  font-size: 20px;\n  padding: 10px 0;\n`;\n","import { Link } from 'react-router-dom';\nimport { MoviesItemTitle, MoviesItemStyled } from './MoviesItem.styled';\n\nexport const MoviesItem = ({ title, id, poster, location }) => {\n  return (\n    <MoviesItemStyled>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={poster} alt={title} />\n        <MoviesItemTitle>{title}</MoviesItemTitle>\n      </Link>\n    </MoviesItemStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\n","import { MoviesItem } from 'components/MoviesList/MoviesItem/MoviesItem';\nimport { MoviesListStyled } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <MoviesListStyled>\n      {movies.map(({ id, title, poster_path }) => {\n        const moviePoster = poster_path\n          ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n          : 'https://cdn.pixabay.com/photo/2016/01/20/18/35/x-1152114_960_720.png';\n        return (\n          <MoviesItem\n            key={id}\n            title={title}\n            id={id}\n            poster={moviePoster}\n            location={location}\n          />\n        );\n      })}\n    </MoviesListStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { theme } from 'theme/theme';\n\nexport const Input = styled.input`\n  width: 500px;\n  height: 40px;\n  border-radius: 10px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 40px;\n  font-size: 20px;\n  border-radius: 10px;\n  margin-left: 10px;\n  background-color: ${theme.color.teal};\n  box-shadow: ${theme.boxShadow};\n`;\n","import { Button, Input } from './MoviesForm.styled';\n\nexport const MoviesForm = ({ onFormSubmit }) => {\n  return (\n    <form onSubmit={onFormSubmit}>\n      <Input type=\"text\" name=\"searchInput\" />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { MoviesForm } from 'components/MoviesForm/MoviesForm';\nimport { fetchSearchMovies } from 'services/API';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport Failed from 'components/FailedRoute/FailedRoute';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  const onFormSubmit = e => {\n    const form = e.target;\n    e.preventDefault();\n    setSearchParams({ query: form.elements.searchInput.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const searchMovies = async () => {\n      try {\n        setStatus(STATUS.PENDING);\n        const result = await fetchSearchMovies(query);\n        setSearchMovies(result);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        console.log(error);\n      }\n    };\n    searchMovies();\n  }, [query]);\n\n  return (\n    <>\n      <MoviesForm onFormSubmit={onFormSubmit} />\n      <MoviesList movies={searchMovies} location={location} />\n      {searchMovies.length === 0 && status === STATUS.RESOLVED && <Failed />}\n      {status === STATUS.PENDING && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = new URLSearchParams({\n  api_key: '193a1318aa83a5b49d1c16448163261b',\n});\n\nexport async function fetchMovies() {\n  const response = await axios(`/trending/movie/day?${params}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(search) {\n  const response = await axios(`/search/movie?${params}&query=${search}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieDescription(id) {\n  const response = await axios(`/movie/${id}?${params}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits?${params}`);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews?${params}`);\n  return response.data.results;\n}"],"names":["MoviesItemStyled","styled","theme","MoviesItemTitle","MoviesItem","title","id","poster","location","to","state","from","src","alt","MoviesListStyled","MoviesList","movies","map","poster_path","moviePoster","Input","Button","MoviesForm","onFormSubmit","onSubmit","type","name","STATUS","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","useLocation","query","get","useEffect","fetchSearchMovies","result","console","log","e","form","target","preventDefault","elements","searchInput","value","reset","length","Loader","axios","params","URLSearchParams","api_key","fetchMovies","response","data","results","search","fetchMovieDescription","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}