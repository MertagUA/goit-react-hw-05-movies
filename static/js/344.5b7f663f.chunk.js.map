{"version":3,"file":"static/js/344.5b7f663f.chunk.js","mappings":"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","sources":["components/MovieAddictionalInfo/MovieAddictionalInfo.styled.jsx","components/MovieAddictionalInfo/MovieAddictionalInfo.jsx","components/MovieDescription/MovieDescription.styled.jsx","components/MovieDescription/MovieDescription.jsx","components/MovieDetailsButton/MovieDetailsButton.styled.jsx","components/MovieDetailsButton/MovieDetailsButton.jsx","pages/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { theme } from 'theme/theme';\n\nexport const AddictionalInfoList = styled.ul`\n  width: 300px;\n  display: flex;\n  justify-content: space-around;\n  margin-top: 10px;\n  ma\n`;\n\nexport const ButtonLink = styled(Link)`\n  display: inline-block;\n  width: 120px;\n  padding: 10px;\n  border-radius: 10px;\n  text-align: center;\n  font-size: 20px;\n  background-color: ${theme.color.teal};\n  box-shadow: ${theme.boxShadow};\n`;\n","import { AddictionalInfoList, ButtonLink } from './MovieAddictionalInfo.styled';\n\nexport const MovieAddictionalInfo = () => {\n  return (\n    <>\n      <h2>Addictional information</h2>\n      <AddictionalInfoList>\n        <li>\n          <ButtonLink to=\"cast\">Cast</ButtonLink>\n        </li>\n        <li>\n          <ButtonLink to=\"reviews\">Reviews</ButtonLink>\n        </li>\n      </AddictionalInfoList>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MovieDescriptionWrapper = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nexport const MovieDescriptionThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin-left: 20px;\n  width: 500px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const OverviewText = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const GenresText = styled.p`\n  margin-bottom: 10px;\n`;\n","import { MovieAddictionalInfo } from 'components/MovieAddictionalInfo/MovieAddictionalInfo';\nimport {\n  GenresText,\n  MovieDescriptionThumb,\n  MovieDescriptionWrapper,\n  OverviewText,\n  Title,\n  UserScore,\n} from './MovieDescription.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieDescription = ({ movieDescription }) => {\n  const { title, poster_path, overview, vote_average, genres } =\n    movieDescription;\n  const filmGenres = genres.map(genre => genre.name).join(', ');\n  const userScore = (vote_average * 10).toFixed();\n  const moviePoster = poster_path\n    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n    : 'https://cdn.pixabay.com/photo/2016/01/20/18/35/x-1152114_960_720.png';\n  return (\n    <>\n      <MovieDescriptionWrapper>\n        <img src={moviePoster} alt={title} width=\"300px\" height=\"450px\" />\n        <MovieDescriptionThumb>\n          <Title>{title}</Title>\n          <UserScore>User score: {userScore}%</UserScore>\n          <h2>Overview:</h2>\n          <OverviewText>{overview}</OverviewText>\n          <h2>Genres:</h2>\n          <GenresText>{filmGenres}</GenresText>\n          <MovieAddictionalInfo />\n        </MovieDescriptionThumb>\n      </MovieDescriptionWrapper>\n    </>\n  );\n};\n\nMovieDescription.propTypes = {\n  movieDescription: PropTypes.object,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { theme } from 'theme/theme';\n\nexport const ButtonLink = styled(Link)`\n  display: inline-block;\n  width: 120px;\n  padding: 5px;\n  text-align: center;\n  border: 1px solid ${theme.color.black};\n  border-radius: 10px;\n  margin-bottom: 10px;\n  font-size: 20px;\n  background-color: ${theme.color.teal};\n`;\n","import { ButtonLink } from './MovieDetailsButton.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieDetailsButton = ({ backLinkHref }) => {\n  return <ButtonLink to={backLinkHref.current}>Back</ButtonLink>;\n};\n\nMovieDetailsButton.propTypes = {\n  movieDescription: PropTypes.object,\n};\n","import { MovieDescription } from 'components/MovieDescription/MovieDescription';\nimport { fetchMovieDescription } from 'services/API';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieDetailsButton } from 'components/MovieDetailsButton/MovieDetailsButton';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetails = () => {\n  const [movieDescription, setMovieDescription] = useState(\n    JSON.parse(localStorage.getItem('movieDescription')) ?? []\n  );\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieDescription = async () => {\n      try {\n        const result = await fetchMovieDescription(movieId);\n        setMovieDescription(result);\n        localStorage.setItem('movieDescription', JSON.stringify(result));\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        console.log(error);\n      }\n    };\n    movieDescription();\n  }, [movieId]);\n\n  if (status === STATUS.PENDING) {\n    return <Loader />;\n  }\n\n  if (status === STATUS.RESOLVED) {\n    return (\n      <>\n        <MovieDetailsButton backLinkHref={backLinkHref} />\n        <MovieDescription movieDescription={movieDescription} />\n        <Outlet />\n      </>\n    );\n  }\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = new URLSearchParams({\n  api_key: '193a1318aa83a5b49d1c16448163261b',\n});\n\nexport async function fetchMovies() {\n  const response = await axios(`/trending/movie/day?${params}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(search) {\n  const response = await axios(`/search/movie?${params}&query=${search}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieDescription(id) {\n  const response = await axios(`/movie/${id}?${params}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits?${params}`);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews?${params}`);\n  return response.data.results;\n}"],"names":["AddictionalInfoList","styled","ButtonLink","Link","theme","MovieAddictionalInfo","to","MovieDescriptionWrapper","MovieDescriptionThumb","Title","UserScore","OverviewText","GenresText","MovieDescription","movieDescription","title","poster_path","overview","vote_average","filmGenres","genres","map","genre","name","join","userScore","toFixed","moviePoster","src","alt","width","height","MovieDetailsButton","backLinkHref","current","STATUS","useState","JSON","parse","localStorage","getItem","setMovieDescription","status","setStatus","location","useLocation","useRef","state","from","movieId","useParams","useEffect","fetchMovieDescription","result","setItem","stringify","console","log","Loader","axios","params","URLSearchParams","api_key","fetchMovies","response","data","results","fetchSearchMovies","search","id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}