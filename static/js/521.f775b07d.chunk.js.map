{"version":3,"file":"static/js/521.f775b07d.chunk.js","mappings":"kSAGaA,EAAiBC,EAAAA,EAAAA,GAAH,uPAMXC,EAAAA,EAAAA,WAOHC,EAAWF,EAAAA,EAAAA,EAAH,6CAIRG,EAAgBH,EAAAA,EAAAA,EAAH,gD,SCjBbI,EAAW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpCC,EAAcD,EAAY,0CACOA,GACnC,yHACJ,OACE,UAACR,EAAD,YACE,gBAAKU,IAAKD,EAAaE,IAAKL,EAAMM,MAAM,QAAQC,OAAO,WACvD,SAACV,EAAD,UAAWG,KACX,UAACF,EAAD,yBAA2BG,OAGhC,ECZYO,EAAOb,EAAAA,EAAAA,GAAH,gICEJc,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAACF,EAAD,UACGE,EAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIZ,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChC,OACE,SAACH,EAAD,CAEEC,KAAMA,EACNC,UAAWA,EACXC,aAAcA,GAHTU,EAMV,KAGN,ECID,EAlBa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,IAAeJ,GAFtB,OAERK,EAFQ,OAGdN,EAAQM,GAHM,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACH,KACG,SAACN,EAAD,CAAUC,KAAMA,GACxB,C,mMCnBDa,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,qCAGJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBJ,EAAAA,EAAAA,GAAM,uBAAD,OAAwBC,IAD/C,cACCI,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBT,EAAAA,EAAAA,GAAM,iBAAD,OAAkBC,EAAlB,kBAAkCQ,IADzD,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCrB,GAArC,wFACkBW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,YAAiBY,IADxC,cACCI,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8BP,GAA9B,wFACkBW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,oBAAyBY,IADhD,cACCI,EADD,yBAEEA,EAASC,KAAKnB,MAFhB,kEAKA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCtB,GAAjC,wFACkBW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,oBAAyBY,IADhD,cACCI,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE","sources":["components/Cast/CastItem/CastItem.styled.jsx","components/Cast/CastItem/CastItem.jsx","components/Cast/CastList/CastList.styled.jsx","components/Cast/CastList/CastList.jsx","components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'theme/theme';\n\nexport const CastItemStyled = styled.li`\n  width: 300px;\n  font-size: 20px;\n  text-align: center;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  box-shadow: ${theme.boxShadow};\n  transition: scale 200ms linear;\n  &:hover {\n    scale: 1.05;\n  }\n`;\n\nexport const CastName = styled.p`\n  padding-top: 5px;\n`;\n\nexport const CastCharacter = styled.p`\n  padding-bottom: 5px;\n`;\n","import { CastCharacter, CastItemStyled, CastName } from './CastItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const CastItem = ({ name, character, profile_path }) => {\n  const actorPoster = profile_path\n    ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n    : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1200px-No-Image-Placeholder.svg.png';\n  return (\n    <CastItemStyled>\n      <img src={actorPoster} alt={name} width=\"300px\" height=\"450px\" />\n      <CastName>{name}</CastName>\n      <CastCharacter>Character: {character}</CastCharacter>\n    </CastItemStyled>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string,\n  profile_path: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\n","import { CastItem } from 'components/Cast/CastItem/CastItem';\nimport { List } from './CastList.styled';\nimport PropTypes from 'prop-types';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(({ id, name, character, profile_path }) => {\n        return (\n          <CastItem\n            key={id}\n            name={name}\n            character={character}\n            profile_path={profile_path}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.array,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/API';\nimport { CastList } from './CastList/CastList';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const result = await fetchMovieCast(movieId);\n        setCast(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n  return <CastList cast={cast} />;\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = new URLSearchParams({\n  api_key: '193a1318aa83a5b49d1c16448163261b',\n});\n\nexport async function fetchMovies() {\n  const response = await axios(`/trending/movie/day?${params}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(search) {\n  const response = await axios(`/search/movie?${params}&query=${search}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieDescription(id) {\n  const response = await axios(`/movie/${id}?${params}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`/movie/${id}/credits?${params}`);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews?${params}`);\n  return response.data.results;\n}"],"names":["CastItemStyled","styled","theme","CastName","CastCharacter","CastItem","name","character","profile_path","actorPoster","src","alt","width","height","List","CastList","cast","map","id","useState","setCast","movieId","useParams","useEffect","movieCast","fetchMovieCast","result","console","log","axios","params","URLSearchParams","api_key","fetchMovies","response","data","results","fetchSearchMovies","search","fetchMovieDescription","fetchMovieReviews"],"sourceRoot":""}